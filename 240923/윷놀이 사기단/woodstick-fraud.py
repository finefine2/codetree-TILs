# 인접리스트 만드는데 정성을 다해야 함!!
#       0   1   2   3   4   5      6   7   8   9    10      11   12   13   14   15      16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32   33   34   35   36
adj = [[1],[2],[3],[4],[5],[6,21],[7],[8],[9],[10],[11,27],[12],[13],[14],[15],[16,29],[17],[18],[19],[20],[32],[22],[23],[24],[25],[26],[20],[28],[24],[30],[31],[24],[32],[32],[32],[32],[32]]
score =[0,  2,  4,  6,  8,  10,    12, 14, 16, 18,  20,     22,  24,  26,  28,  30,     32,  34,  36,  38,  40,  13,  16,  19,  25,  30,  35,  22,  24,  28,  27,  26,  0]

def dfs(n, sm):
    global ans
    if n==10:   # 종료조건(10턴 완료)
        ans = max(ans, sm)
        return

    # 하부호출(이동 + 하부호출)
    for j in range(4):
        s = v[j]                    # j번말의 현재위치
        c = adj[s][-1]              # 한 칸 이동(갈림길의 경우 시작위치에따라 다름!)
        for _ in range(1,lst[n]):   # 나머지 칸 이동
            c = adj[c][0]

        if c==32 or c not in v:     # 목적지이거나 다른말이 없는 경우 이동가능
            v[j]=c
            dfs(n+1, sm+score[c])
            v[j]=s

lst = list(map(int, input().split()))
v = [0,0,0,0]   # 말의 현재위치를 저장
ans = 0
dfs(0, 0)
print(ans)